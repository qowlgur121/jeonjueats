services:
  # MySQL 데이터베이스
  db:
    image: mysql:8.0
    container_name: jeonjueats-db-prod
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-jeonjueats_prod_password_2025}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-jeonjueats}
      MYSQL_USER: ${MYSQL_USER:-jeonjueats_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-jeonjueats_prod_password_2025}
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0 --skip-host-cache --skip-name-resolve
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    networks:
      - jeonjueats-network
    restart: unless-stopped

  # Spring Boot 백엔드 (프로덕션)
  backend:
    image: ${DOCKER_USERNAME}/jeonjueats-backend:latest
    container_name: jeonjueats-backend-prod
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-jeonjueats}
      DB_USERNAME: ${MYSQL_USER:-jeonjueats_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-jeonjueats_prod_password_2025}
      JWT_SECRET: ${JWT_SECRET:-jeonjueats-secure-jwt-secret-key-for-production-change-this-in-real-deployment}
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - jeonjueats-network
    restart: unless-stopped

  # 일반 사용자용 Vue.js 프론트엔드 (프로덕션)
  frontend-user:
    image: ${DOCKER_USERNAME}/jeonjueats-user:latest
    container_name: jeonjueats-frontend-user-prod
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - jeonjueats-network
    restart: unless-stopped

  # 사장님용 Vue.js 프론트엔드 (프로덕션)
  frontend-owner:
    image: ${DOCKER_USERNAME}/jeonjueats-owner:latest
    container_name: jeonjueats-frontend-owner-prod
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - jeonjueats-network
    restart: unless-stopped

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: jeonjueats-nginx-prod
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend-user
      - frontend-owner
    networks:
      - jeonjueats-network
    restart: unless-stopped

# 볼륨 설정
volumes:
  mysql_data_prod:
    driver: local

# 네트워크 설정
networks:
  jeonjueats-network:
    driver: bridge